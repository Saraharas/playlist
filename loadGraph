import os
import sys
import sqlite3
from snap import *
from collections import defaultdict

# Load graph from SQLite db. 
# Limit to 10000 rows for now. Change parameter to get more rows.
# Have to add all edges first before adding weights 
# because of a known snap bug 

num = 0
G1 = TNEANet.New()
G1.AddStrAttrN("name")

conn = sqlite3.connect("lastfm_similars.db")
sql = "SELECT tid, target FROM similars_src LIMIT 10000"
res = conn.execute(sql)
alldata = res.fetchall()

# create mapping from name to node id
dt = {}
for data in alldata:
    target =  data[1]
    pc = target.split(",")
    dt[data[0]] = num
    num += 1
    for i in range(0,len(pc),2):
        dt[pc[i]] = num
        num += 1

# create nodes
for key, val in dt.iteritems():
    G1.AddNode(val)
    G1.AddStrAttrDatN(val, key, "name")

# create edges
edict = {} 
eid = 0 
for data in alldata:
    srcid = dt[data[0]]    
    target = data[1].split(",")
    for i in range(0,len(target),2):
	destid = dt[target[i]]
	weight = float(target[i+1])
        G1.AddEdge(srcid, destid, eid)
	edict[eid] = weight
	eid += 1
	
# add edge attributes
G1.AddFltAttrE("weight")
for i in range(eid):
    G1.AddFltAttrDatE(i, edict[i], "weight")

print "Graph loaded" 
'''
for NI in G1.Nodes():
    print G1.GetStrAttrDatN(NI.GetId(), "name")
for EI in G1.Edges():
    print G1.GetFltAttrDatE(EI.GetId(), "weight")
'''






